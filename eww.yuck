(include "revealer.yuck")

(defvar revealSpotify false)
(defvar revealVolume false)
(defvar revealNotify false)

(deflisten musicStatus "playerctl --follow status || true")
(deflisten notifications
  :initial ""
  :onchange "eww update revealNotify=true && sleep 5 && eww update revealNotify=false"
  "notification-listener")

(defwidget bar []
  (centerbox :class "centerbox" :orientation "h"
    (workspaces)
    (spotify)
    (sidestuff)))

(defwidget notifications [?class]
  (box :space-evenly false
    :class "hover-module ${class}"
    (revealer-on-hover :class "hl-on-hover"
      :var revealNotify
      :varname "revealNotify"
      :transition "slideleft"
      :class "notifications"

      (hovered-sign :var revealNotify
        (label :class "notifications" :text "")
        (label :class "notifications" :text "")
      )
      (button :onclick "playerctl play-pause" (label :class "notifications" :text " ${notifications} "))
    "  ÔÅµ  ")
  )
)

(defwidget sidestuff []
  (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
;    (metric :label "üîä"
;            :value volume
;            :onchange "amixer -D pulse sset Master {}%")
    (systray :prepend-new true)

    (metric :label "Ôãõ"
            :value {EWW_RAM.used_mem_perc}
            :onchange "")
    (metric :label "ÔÉ§"
            :value {EWW_CPU.avg}
            :onchange "")
    (metric :label "üíæ"
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
            :onchange "")
    time
;    (notifications)
    ))



(defwidget workspaces []
  (box :class "workspaces"
       :orientation "h"
       :space-evenly true
       :halign "start"
       :spacing 10
    (button :onclick "qtile cmd-obj -o group 1 -f toscreen" "Û∞áÆ")
    (button :onclick "qtile cmd-obj -o group 2 -f toscreen" "Û∞≠π")
    (button :onclick "qtile cmd-obj -o group 3 -f toscreen" "Ôíâ ")
    (button :onclick "qtile cmd-obj -o group 4 -f toscreen" "Ôâ®")
    (button :onclick "qtile cmd-obj -o group 5 -f toscreen" "Óúå")
    (button :onclick "qtile cmd-obj -o group 6 -f toscreen" "Óúè")
    (button :onclick "qtile cmd-obj -o group 7 -f toscreen" "Û∞õÑ")
  )
)

(defwidget music []
  (box :class "music"
       :orientation "h"
       :space-evenly false
       :halign "center"
    {music != "" ? "üéµ${music}" : ""}))


(defwidget metric [label value onchange]
  (box :orientation "h"
       :class "metric"
       :space-evenly false
    (box :class "label" label)
    (scale :min 0
           :max 101
           :active {onchange != ""}
           :value value
           :onchange onchange)))



(deflisten music :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true")

;(defpoll volume :interval "1s"
;  "scripts/getvol")

(defpoll time :interval "10s"
  "date '+%H:%M %b %d, %Y'")

(defwindow bar
  :monitor "<primary>"
  :windowtype "dock"
  :geometry (geometry :x "0%"
                      :y "0%"
                      :width "100%"
                      :height "10px"
                      :anchor "top center")
  :reserve (struts :side "top" :distance "4%")
  (bar))

(defwidget spotify [?class]
  (box :space-evenly false
    :class "hover-module ${class}"
    (revealer-on-hover :class "hl-on-hover"
      :var revealSpotify
      :varname "revealSpotify"
      :transition "slideleft"
      :class "spotify"
      
      (hovered-sign :var revealSpotify
        (label :text "")
        (label :text "")
      )
      (button :onclick "playerctl play-pause" (label :class "spotify" :text " ${music} "))
    "  ÔÜº - ${ musicStatus == "Playing" ? "ÔÖÑ" : "Ôäã" }  ")
  )
)